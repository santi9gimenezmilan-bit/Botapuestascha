import requests
import time
import schedule
import math
import logging

# -------------------------
# CONFIGURACIÓN DEL BOT
# -------------------------
TELEGRAM_TOKEN = "7973524930:AAHI2qy0huq8UQPfxl_acu8x8bzV_ueS4No"
CHAT_ID = "5436569389"
API_KEY = "632e4cac13a0d9214071efc40cf15d9f"
EV_THRESHOLD = 0.03   # 3% de valor esperado mínimo
BANK = 10000          # Bank inicial
STAKE_PCT = 0.01      # 1% por apuesta
# -------------------------

logging.basicConfig(level=logging.INFO)

def send_telegram_message(message: str):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {"chat_id": CHAT_ID, "text": message}
    try:
        requests.post(url, data=payload)
    except Exception as e:
        logging.error(f"Error enviando mensaje a Telegram: {e}")

def implied_prob(odds):
    return 1 / odds if odds > 0 else 0

def expected_value(prob, odds):
    return (prob * odds) - 1

def fetch_odds():
    sports = ["soccer_epl", "americanfootball_nfl", "basketball_nba"]
    markets = "h2h"  # 1x2 o moneyline
    region = "us"    # cuotas de USA

    odds_data = []
    for sport in sports:
        url = f"https://api.the-odds-api.com/v4/sports/{sport}/odds"
        params = {"apiKey": API_KEY, "regions": region, "markets": markets, "oddsFormat": "decimal"}
        try:
            resp = requests.get(url, params=params)
            if resp.status_code == 200:
                odds_data.extend(resp.json())
            else:
                logging.error(f"Error obteniendo cuotas {sport}: {resp.text}")
        except Exception as e:
            logging.error(f"Error conectando a API: {e}")
    return odds_data

def analyze_and_alert():
    logging.info("Analizando partidos...")
    data = fetch_odds()

    for match in data:
        teams = match.get("bookmakers", [])
        if not teams:
            continue

        bookmaker = teams[0]
        markets = bookmaker.get("markets", [])
        if not markets:
            continue

        outcomes = markets[0].get("outcomes", [])
        for outcome in outcomes:
            team = outcome["name"]
            odds = float(outcome["price"])
            prob = implied_prob(odds)
            ev = expected_value(prob, odds)

            if ev >= EV_THRESHOLD:
                stake = BANK * STAKE_PCT
                message = (
                    f"📢 Apuesta con valor detectada!\n\n"
                    f"🏟️ Evento: {match['home_team']} vs {match['away_team']}\n"
                    f"➡️ Selección: {team}\n"
                    f"💰 Cuota: {odds}\n"
                    f"📊 Valor Esperado: {round(ev*100,2)}%\n"
                    f"💵 Stake sugerido: {stake:.2f} pesos"
                )
                send_telegram_message(message)

# Programa para correr cada 10 minutos
schedule.every(10).minutes.do(analyze_and_alert)

send_telegram_message("✅ Bot de apuestas iniciado y corriendo en Railway.")

while True:
    schedule.run_pending()
    time.sleep(5)